{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortFields","goodsFromServer","GoodList","goods","map","good","App","useState","NONE","sortField","setSortField","reversedList","setReversedList","visibleGoods","isReversed","preparedGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getSortedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,QAAAA,E,oBAAAA,E,iBAAAA,M,KAML,IA+BaE,EAAoC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC/C,6BACGA,EAAMC,KACL,SAAAC,GAAI,OACF,oBACE,UAAQ,OADV,SAIGA,GAFIA,SASFC,EAAgB,WAC3B,MAAkCC,mBAASP,EAAWQ,MAAtD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACMC,EAjDe,SACrBV,EACAM,EACAK,GAEA,IAAIC,EAAa,YAAOZ,GAmBxB,OAjBIM,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKT,EAAWmB,SACd,OAAOF,EAAMG,cAAcF,GAC7B,KAAKlB,EAAWqB,OACd,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXR,IACFC,EAAgBA,EAAcQ,WAGzBR,EAyBcS,CAAevB,EAAiBQ,EAAWE,GAOhE,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYlB,IAAcT,EAAWmB,WAG3CS,QAAS,kBAAMlB,EAAaV,EAAWmB,WATzC,iCAcA,wBACEO,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYlB,IAAcT,EAAWqB,SAG3CO,QAAS,kBAAMlB,EAAaV,EAAWqB,SATzC,4BAcA,wBACEK,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAahB,IAGnBiB,QAAS,kBAAMhB,GAAiBD,IATlC,sBAcEF,EAAUa,OAAS,GAAKX,IACxB,wBACEe,KAAK,SACLD,UAAWE,IAAG,SAAU,YAAa,YACrCC,QAtDM,WACdlB,EAAaV,EAAWQ,MACxBI,GAAgB,IAiDV,sBAUJ,cAAC,EAAD,CAAUT,MAAOU,QCtIvBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.19eeaf0f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortFields {\n  NONE = '',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nconst getSortedGoods = (\n  goods: string[],\n  sortField: SortFields,\n  isReversed: boolean,\n) => {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortFields.ALPHABET:\n          return good1.localeCompare(good2);\n        case SortFields.LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\ntype GoodListProps = {\n  goods: string[],\n};\n\nexport const GoodList: React.FC<GoodListProps> = ({ goods }) => (\n  <ul>\n    {goods.map(\n      good => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n        >\n          {good}\n        </li>\n      ),\n    )}\n  </ul>\n);\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortFields.NONE);\n  const [reversedList, setReversedList] = useState(false);\n  const visibleGoods = getSortedGoods(goodsFromServer, sortField, reversedList);\n\n  const onReset = () => {\n    setSortField(SortFields.NONE);\n    setReversedList(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': sortField !== SortFields.ALPHABET },\n            )\n          }\n          onClick={() => setSortField(SortFields.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortField !== SortFields.LENGTH },\n            )\n          }\n          onClick={() => setSortField(SortFields.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': !reversedList },\n            )\n          }\n          onClick={() => setReversedList(!reversedList)}\n        >\n          Reverse\n        </button>\n\n        {(sortField.length > 0 || reversedList) && (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-danger', 'is-light')}\n            onClick={onReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}